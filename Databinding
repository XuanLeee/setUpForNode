Databinding = communication

TypeScript to HTML,using Output Data can be these style:
1 String Interpolation : {{data}} example:

<p>This server has id {{serverId}} and the status is {{getServerStatus()}}</p>

import { Component } from '@angular/core';

@Component({
selector:'app-server',
templateUrl:'./server.component.html'
	})

export class ServerComponent{
	serverId: number =10;
	serverStatus: string='offline';

getServerStatus(){
	return this.serverStatus;
  }
	
}

2 Property Binding([property]="data"): html element property binding to this native html element enhance
example:
export class ServersComponent implements OnInit {
  allowNewServer=false;
  
  constructor() {
    setTimeout(() => {
      this.allowNewServer = true;
      });
   }
   <button class="btn btn-primary"
[disabled]="!allowNewServer">Add Server</button>
How do you know to which Properties or Events of HTML Elements you may bind?
You can basically bind to all Properties and Events -
a good idea is to console.log()  the element you're interested in to see which properties and events it offers.

HTML to TypeScript, React to user events:
Event Binding((event)="expression")
example:
onCreateServer(){
    this.serverCreationStatus = 'Server was created';
  }


<button class="btn btn-primary"
[disabled]="!allowNewServer"
(click)="onCreateServer()">Add Server</button>


Combination of both(including output data and react to event):
Two-Way-Binding([(ngModel)]="data")

